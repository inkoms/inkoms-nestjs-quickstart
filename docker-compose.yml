version: "3.8"

services:
  org-training-nestjs-api:
    container_name: org-training-nestjs-api
    image: org-training-nestjs-api
    restart: always
    environment:
      API_PORT: ${API_PORT}
      API_JWT_SECRET: ${API_JWT_SECRET}
      API_JWT_EXPIRATION_TIME: ${API_JWT_EXPIRATION_TIME}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_NAME: ${DB_NAME}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_SECRET: ${DB_SECRET}
      DB_IV: ${DB_IV}
      ENV: ${ENV}
      TZ: ${TZ}
    build:
      context: .
      dockerfile: Dockerfile
      args:
        API_PORT: ${API_PORT}
    depends_on:
      - org-training-nestjs-db
    networks:
      - org-training-nestjs

  org-training-nestjs-db:
    container_name: org-training-nestjs-db
    restart: always
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      TZ: ${TZ}
    volumes:
      - ../org-training-nestjs-db:/var/lib/postgresql/data
    networks:
      - org-training-nestjs

  org-training-nestjs-pgadmin:
    container_name: org-training-nestjs-pgadmin
    restart: always
    image: dpage/pgadmin4
    privileged: true
    user: root:root
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PG_ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PG_ADMIN_PASSWORD}
    depends_on:
      - org-training-nestjs-db
#    ports:
#      - ${PG_ADMIN_PORT}:80
    networks:
      - org-training-nestjs
    volumes:
      - org-training-nestjs-pgadmin:/var/lib/pgadmin

volumes:
  org-training-nestjs-pgadmin:

networks:
  org-training-nestjs:
    name: org-training-nestjs
